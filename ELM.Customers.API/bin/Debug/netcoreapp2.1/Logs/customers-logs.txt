2019-08-31 04:30:13.047 +02:00 [INF] User profile is available. Using 'C:\Users\Islam Abd Elrazek\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-08-31 04:30:13.495 +02:00 [INF] Entity Framework Core 2.1.4-rtm-31024 initialized 'ELMCustomersDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-08-31 04:30:13.584 +02:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE') SELECT 1 ELSE SELECT 0
2019-08-31 04:30:34.337 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/index.html  
2019-08-31 04:30:34.347 +02:00 [WRN] Failed to determine the https port for redirect.
2019-08-31 04:30:34.359 +02:00 [INF] 

http localhost:5000/index.html  


2019-08-31 04:30:34.549 +02:00 [INF] 200: <!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Swagger UI</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" type="text/css" href="./swagger-ui.css" >
  <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" />
  <link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
  <style>
    html
    {
      box-sizing: border-box;
      overflow: -moz-scrollbars-vertical;
      overflow-y: scroll;
    }
    *,
    *:before,
    *:after
    {
      box-sizing: inherit;
    }

    body {
      margin:0;
      background: #fafafa;
    }
  </style>
  
</head>

<body>

<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" style="position:absolute;width:0;height:0">
  <defs>
    <symbol viewBox="0 0 20 20" id="unlocked">
          <path d="M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V6h2v-.801C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8z"></path>
    </symbol>

    <symbol viewBox="0 0 20 20" id="locked">
      <path d="M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8zM12 8H8V5.199C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="close">
      <path d="M14.348 14.849c-.469.469-1.229.469-1.697 0L10 11.819l-2.651 3.029c-.469.469-1.229.469-1.697 0-.469-.469-.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-.469-.469-.469-1.228 0-1.697.469-.469 1.228-.469 1.697 0L10 8.183l2.651-3.031c.469-.469 1.228-.469 1.697 0 .469.469.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c.469.469.469 1.229 0 1.698z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="large-arrow">
      <path d="M13.25 10L6.109 2.58c-.268-.27-.268-.707 0-.979.268-.27.701-.27.969 0l7.83 7.908c.268.271.268.709 0 .979l-7.83 7.908c-.268.271-.701.27-.969 0-.268-.269-.268-.707 0-.979L13.25 10z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="large-arrow-down">
      <path d="M17.418 6.109c.272-.268.709-.268.979 0s.271.701 0 .969l-7.908 7.83c-.27.268-.707.268-.979 0l-7.908-7.83c-.27-.268-.27-.701 0-.969.271-.268.709-.268.979 0L10 13.25l7.418-7.141z"/>
    </symbol>


    <symbol viewBox="0 0 24 24" id="jump-to">
      <path d="M19 7v4H5.83l3.58-3.59L8 6l-6 6 6 6 1.41-1.41L5.83 13H21V7z"/>
    </symbol>

    <symbol viewBox="0 0 24 24" id="expand">
      <path d="M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z"/>
    </symbol>

  </defs>
</svg>

<div id="swagger-ui"></div>

<!-- Workaround for https://github.com/swagger-api/swagger-editor/issues/1371 -->
<script>
  if (window.navigator.userAgent.indexOf("Edge") > -1) {
    console.log("Removing native Edge fetch in favor of swagger-ui's polyfill")
    window.fetch = undefined;
  }
</script>

<script src="./swagger-ui-bundle.js"> </script>
<script src="./swagger-ui-standalone-preset.js"> </script>
<script>
  window.onload = function () {
    var configObject = JSON.parse('{"urls":[{"url":"/swagger/v1/swagger.json","name":"Customers API V1"}],"deepLinking":false,"displayOperationId":false,"defaultModelsExpandDepth":1,"defaultModelExpandDepth":1,"defaultModelRendering":"example","displayRequestDuration":false,"docExpansion":"list","showExtensions":false,"showCommonExtensions":false,"supportedSubmitMethods":["get","put","post","delete","options","head","patch","trace"],"validatorUrl":null}');
    var oauthConfigObject = JSON.parse('{"clientId":"clientId","clientSecret":"clientSecret","scopeSeperator":" ","useBasicAuthenticationWithAccessCodeGrant":false}');

    // Apply mandatory parameters
    configObject.dom_id = "#swagger-ui";
    configObject.presets = [SwaggerUIBundle.presets.apis, SwaggerUIStandalonePreset];
    configObject.layout = "StandaloneLayout";

    // If oauth2RedirectUrl isn't specified, use the built-in default
    if (!configObject.hasOwnProperty("oauth2RedirectUrl"))
      configObject.oauth2RedirectUrl = window.location.href.replace("index.html", "oauth2-redirect.html").split('#')[0];

    // Build a system
    const ui = SwaggerUIBundle(configObject);

    // Apply OAuth config
    ui.initOAuth(oauthConfigObject);
  }
</script>
</body>

</html>

2019-08-31 04:30:34.559 +02:00 [INF] Request finished in 223.4093ms 200 text/html;charset=utf-8
2019-08-31 04:30:35.519 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/v1/swagger.json  
2019-08-31 04:30:35.520 +02:00 [INF] 

http localhost:5000/swagger/v1/swagger.json  


2019-08-31 04:30:35.855 +02:00 [INF] 200: {
  "openapi": "3.0.1",
  "info": {
    "title": "Customers API",
    "version": "v1"
  },
  "paths": {
    "/api/Customers": {
      "patch": {
        "tags": [
          "Customers"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerDTOHttpRequestModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerDTOHttpRequestModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerDTOHttpRequestModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerDTOHttpRequestModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Home": {
      "get": {
        "tags": [
          "Home"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BaseRequestResponseHeader": {
        "type": "object",
        "properties": {
          "messageId": {
            "type": "integer",
            "format": "int32"
          },
          "timeStamp": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "CustomerDTO": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CustomerDTOHttpRequestModel": {
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/BaseRequestResponseHeader"
          },
          "body": {
            "$ref": "#/components/schemas/CustomerDTO"
          }
        },
        "additionalProperties": false
      }
    }
  }
}
2019-08-31 04:30:35.855 +02:00 [INF] Request finished in 336.2696ms 200 application/json;charset=utf-8
2019-08-31 04:30:42.955 +02:00 [INF] Request starting HTTP/1.1 PATCH http://localhost:5000/api/Customers application/json-patch+json 149
2019-08-31 04:30:42.973 +02:00 [INF] 

http localhost:5000/api/Customers  {"header":{"messageId":0,"timeStamp":"2019-08-31T02:30:38.759Z"},"body":{"firstName":"string","lastName":"string","phone":"string","email":"string"}}


2019-08-31 04:30:43.014 +02:00 [INF] Route matched with {action = "Patch", controller = "Customers"}. Executing action ELM.Customers.API.Controllers.CustomersController.Patch (ELM.Customers.API)
2019-08-31 04:30:43.058 +02:00 [INF] Executing action method ELM.Customers.API.Controllers.CustomersController.Patch (ELM.Customers.API) with arguments (["ELM.Common.BaseRequestResponse.HttpRequestModel`1[ELM.Common.DTO.CustomerDTO]"]) - Validation state: "Valid"
2019-08-31 04:30:43.066 +02:00 [INF] Executed action method ELM.Customers.API.Controllers.CustomersController.Patch (ELM.Customers.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3.8787000000000003ms.
2019-08-31 04:30:43.075 +02:00 [INF] Executing ObjectResult, writing value of type 'ELM.Common.BaseRequestResponse.HttpResponseModel`1[[ELM.Common.DTO.CustomerDTO, ELM.Common, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2019-08-31 04:30:43.086 +02:00 [INF] Executed action ELM.Customers.API.Controllers.CustomersController.Patch (ELM.Customers.API) in 69.6478ms
2019-08-31 04:30:43.086 +02:00 [INF] 200: {"header":{"messageId":0,"timeStamp":"2019-08-31T04:30:43.0629219+02:00"},"body":{"data":null,"errors":[]}}
2019-08-31 04:30:43.087 +02:00 [INF] Request finished in 132.6279ms 200 application/json; charset=utf-8
